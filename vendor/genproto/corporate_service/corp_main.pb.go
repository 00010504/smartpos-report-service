// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: corp_main.proto

package corporate_service

import (
	common "genproto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_corp_main_proto protoreflect.FileDescriptor

var file_corp_main_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x63, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63,
	0x68, 0x65, 0x71, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xe3, 0x0c, 0x0a, 0x10,
	0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x08,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x33, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x15, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x33, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x15,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x0c, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49,
	0x44, 0x12, 0x40, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x70, 0x12, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x05, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x12, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68,
	0x6f, 0x70, 0x73, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12,
	0x33, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78,
	0x12, 0x15, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x78, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x44, 0x1a, 0x08, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78, 0x12, 0x33, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78, 0x12, 0x15, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49,
	0x44, 0x12, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x78, 0x65, 0x73, 0x12, 0x12, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x78, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a,
	0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x44, 0x12, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x63, 0x69, 0x65, 0x70, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x69, 0x65, 0x70, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x73, 0x12, 0x0e, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65,
	0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x1a, 0x07, 0x2e, 0x43,
	0x68, 0x65, 0x71, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x71, 0x75, 0x65, 0x12, 0x0a, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x44, 0x12, 0x31,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x12, 0x14,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x71, 0x75, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49,
	0x44, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_corp_main_proto_goTypes = []interface{}{
	(*common.RequestID)(nil),           // 0: RequestID
	(*UpdateCompanyRequest)(nil),       // 1: UpdateCompanyRequest
	(*CreateCompanyRequest)(nil),       // 2: CreateCompanyRequest
	(*common.SearchRequest)(nil),       // 3: SearchRequest
	(*CreateCompanyTypeRequest)(nil),   // 4: CreateCompanyTypeRequest
	(*UpdateCompanyTypeRequest)(nil),   // 5: UpdateCompanyTypeRequest
	(*CreateShopRequest)(nil),          // 6: CreateShopRequest
	(*UpdateShopRequest)(nil),          // 7: UpdateShopRequest
	(*CreateCashboxRequest)(nil),       // 8: CreateCashboxRequest
	(*UpdateCashboxRequest)(nil),       // 9: UpdateCashboxRequest
	(*common.ShopSearchRequest)(nil),   // 10: ShopSearchRequest
	(*CreatePaymentTypeRequest)(nil),   // 11: CreatePaymentTypeRequest
	(*UpdatePaymentTypeRequest)(nil),   // 12: UpdatePaymentTypeRequest
	(*CreateCompanySizeRequest)(nil),   // 13: CreateCompanySizeRequest
	(*CreateChequeRequest)(nil),        // 14: CreateChequeRequest
	(*UpdateChequeRequest)(nil),        // 15: UpdateChequeRequest
	(*Company)(nil),                    // 16: Company
	(*common.ResponseID)(nil),          // 17: ResponseID
	(*GetAllCompaniesResponse)(nil),    // 18: GetAllCompaniesResponse
	(*CompanyType)(nil),                // 19: CompanyType
	(*GetAllCompanyTypeResponse)(nil),  // 20: GetAllCompanyTypeResponse
	(*Shop)(nil),                       // 21: Shop
	(*GetAllShopsResponse)(nil),        // 22: GetAllShopsResponse
	(*Cashbox)(nil),                    // 23: Cashbox
	(*GetAllCashboxesResponse)(nil),    // 24: GetAllCashboxesResponse
	(*GetPaymentTypesResponse)(nil),    // 25: GetPaymentTypesResponse
	(*GetAllCompanySizeResponse)(nil),  // 26: GetAllCompanySizeResponse
	(*GetAllRecieptBlockResponse)(nil), // 27: GetAllRecieptBlockResponse
	(*GetAllChequesResponse)(nil),      // 28: GetAllChequesResponse
	(*Cheque)(nil),                     // 29: Cheque
}
var file_corp_main_proto_depIdxs = []int32{
	0,  // 0: CorporateService.GetCompanyById:input_type -> RequestID
	1,  // 1: CorporateService.UpdateCompany:input_type -> UpdateCompanyRequest
	2,  // 2: CorporateService.CreateCompany:input_type -> CreateCompanyRequest
	3,  // 3: CorporateService.GetAllCompanies:input_type -> SearchRequest
	0,  // 4: CorporateService.DeleteCompany:input_type -> RequestID
	0,  // 5: CorporateService.GetCompanyTypeById:input_type -> RequestID
	4,  // 6: CorporateService.CreateCompanyType:input_type -> CreateCompanyTypeRequest
	5,  // 7: CorporateService.UpdateCompanyType:input_type -> UpdateCompanyTypeRequest
	0,  // 8: CorporateService.DeleteCompanyType:input_type -> RequestID
	3,  // 9: CorporateService.GetAllCompanyTypes:input_type -> SearchRequest
	6,  // 10: CorporateService.CreateShop:input_type -> CreateShopRequest
	0,  // 11: CorporateService.GetShopById:input_type -> RequestID
	3,  // 12: CorporateService.GetAllShops:input_type -> SearchRequest
	7,  // 13: CorporateService.UpdateShop:input_type -> UpdateShopRequest
	0,  // 14: CorporateService.DeleteShop:input_type -> RequestID
	8,  // 15: CorporateService.CreateCashbox:input_type -> CreateCashboxRequest
	0,  // 16: CorporateService.GetCashboxById:input_type -> RequestID
	9,  // 17: CorporateService.UpdateCashbox:input_type -> UpdateCashboxRequest
	10, // 18: CorporateService.GetAllCashboxes:input_type -> ShopSearchRequest
	0,  // 19: CorporateService.DeleteCashbox:input_type -> RequestID
	11, // 20: CorporateService.CreatePaymentType:input_type -> CreatePaymentTypeRequest
	12, // 21: CorporateService.UpdatePaymentType:input_type -> UpdatePaymentTypeRequest
	3,  // 22: CorporateService.GetAllPaymentTypes:input_type -> SearchRequest
	13, // 23: CorporateService.CreateCompanySize:input_type -> CreateCompanySizeRequest
	3,  // 24: CorporateService.GetAllCompanySize:input_type -> SearchRequest
	3,  // 25: CorporateService.GetAllRecieptBlock:input_type -> SearchRequest
	14, // 26: CorporateService.CreateCheque:input_type -> CreateChequeRequest
	3,  // 27: CorporateService.GetAllCheques:input_type -> SearchRequest
	0,  // 28: CorporateService.GetCheque:input_type -> RequestID
	0,  // 29: CorporateService.DeleteCheque:input_type -> RequestID
	15, // 30: CorporateService.UpdateCheque:input_type -> UpdateChequeRequest
	16, // 31: CorporateService.GetCompanyById:output_type -> Company
	17, // 32: CorporateService.UpdateCompany:output_type -> ResponseID
	17, // 33: CorporateService.CreateCompany:output_type -> ResponseID
	18, // 34: CorporateService.GetAllCompanies:output_type -> GetAllCompaniesResponse
	17, // 35: CorporateService.DeleteCompany:output_type -> ResponseID
	19, // 36: CorporateService.GetCompanyTypeById:output_type -> CompanyType
	17, // 37: CorporateService.CreateCompanyType:output_type -> ResponseID
	17, // 38: CorporateService.UpdateCompanyType:output_type -> ResponseID
	17, // 39: CorporateService.DeleteCompanyType:output_type -> ResponseID
	20, // 40: CorporateService.GetAllCompanyTypes:output_type -> GetAllCompanyTypeResponse
	17, // 41: CorporateService.CreateShop:output_type -> ResponseID
	21, // 42: CorporateService.GetShopById:output_type -> Shop
	22, // 43: CorporateService.GetAllShops:output_type -> GetAllShopsResponse
	17, // 44: CorporateService.UpdateShop:output_type -> ResponseID
	17, // 45: CorporateService.DeleteShop:output_type -> ResponseID
	17, // 46: CorporateService.CreateCashbox:output_type -> ResponseID
	23, // 47: CorporateService.GetCashboxById:output_type -> Cashbox
	17, // 48: CorporateService.UpdateCashbox:output_type -> ResponseID
	24, // 49: CorporateService.GetAllCashboxes:output_type -> GetAllCashboxesResponse
	17, // 50: CorporateService.DeleteCashbox:output_type -> ResponseID
	17, // 51: CorporateService.CreatePaymentType:output_type -> ResponseID
	17, // 52: CorporateService.UpdatePaymentType:output_type -> ResponseID
	25, // 53: CorporateService.GetAllPaymentTypes:output_type -> GetPaymentTypesResponse
	17, // 54: CorporateService.CreateCompanySize:output_type -> ResponseID
	26, // 55: CorporateService.GetAllCompanySize:output_type -> GetAllCompanySizeResponse
	27, // 56: CorporateService.GetAllRecieptBlock:output_type -> GetAllRecieptBlockResponse
	17, // 57: CorporateService.CreateCheque:output_type -> ResponseID
	28, // 58: CorporateService.GetAllCheques:output_type -> GetAllChequesResponse
	29, // 59: CorporateService.GetCheque:output_type -> Cheque
	17, // 60: CorporateService.DeleteCheque:output_type -> ResponseID
	17, // 61: CorporateService.UpdateCheque:output_type -> ResponseID
	31, // [31:62] is the sub-list for method output_type
	0,  // [0:31] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_corp_main_proto_init() }
func file_corp_main_proto_init() {
	if File_corp_main_proto != nil {
		return
	}
	file_company_proto_init()
	file_shop_proto_init()
	file_cashbox_proto_init()
	file_company_type_proto_init()
	file_payment_type_proto_init()
	file_company_size_proto_init()
	file_cheque_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_corp_main_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_corp_main_proto_goTypes,
		DependencyIndexes: file_corp_main_proto_depIdxs,
	}.Build()
	File_corp_main_proto = out.File
	file_corp_main_proto_rawDesc = nil
	file_corp_main_proto_goTypes = nil
	file_corp_main_proto_depIdxs = nil
}
