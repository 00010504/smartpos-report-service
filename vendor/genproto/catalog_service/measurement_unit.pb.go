// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: measurement_unit.proto

package catalog_service

import (
	common "genproto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMeasurementUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrecisionId string          `protobuf:"bytes,1,opt,name=precision_id,json=precisionId,proto3" json:"precision_id,omitempty"`
	UnitId      string          `protobuf:"bytes,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	Request     *common.Request `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *CreateMeasurementUnitRequest) Reset() {
	*x = CreateMeasurementUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMeasurementUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMeasurementUnitRequest) ProtoMessage() {}

func (x *CreateMeasurementUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMeasurementUnitRequest.ProtoReflect.Descriptor instead.
func (*CreateMeasurementUnitRequest) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMeasurementUnitRequest) GetPrecisionId() string {
	if x != nil {
		return x.PrecisionId
	}
	return ""
}

func (x *CreateMeasurementUnitRequest) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *CreateMeasurementUnitRequest) GetRequest() *common.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateMeasurementUnitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UnitId      string          `protobuf:"bytes,2,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
	PrecisionId string          `protobuf:"bytes,3,opt,name=precision_id,json=precisionId,proto3" json:"precision_id,omitempty"`
	Request     *common.Request `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *UpdateMeasurementUnitRequest) Reset() {
	*x = UpdateMeasurementUnitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMeasurementUnitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMeasurementUnitRequest) ProtoMessage() {}

func (x *UpdateMeasurementUnitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMeasurementUnitRequest.ProtoReflect.Descriptor instead.
func (*UpdateMeasurementUnitRequest) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateMeasurementUnitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMeasurementUnitRequest) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *UpdateMeasurementUnitRequest) GetPrecisionId() string {
	if x != nil {
		return x.PrecisionId
	}
	return ""
}

func (x *UpdateMeasurementUnitRequest) GetRequest() *common.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type MeasurementUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LongName             string            `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	ShortName            string            `protobuf:"bytes,4,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Precision            *Precision        `protobuf:"bytes,5,opt,name=precision,proto3" json:"precision,omitempty"`
	CreatedAt            string            `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            *common.ShortUser `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	IsDeletable          bool              `protobuf:"varint,8,opt,name=is_deletable,json=isDeletable,proto3" json:"is_deletable,omitempty"`
	LongNameTranslation  map[string]string `protobuf:"bytes,9,rep,name=long_name_translation,json=longNameTranslation,proto3" json:"long_name_translation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ShortNameTranslation map[string]string `protobuf:"bytes,10,rep,name=short_name_translation,json=shortNameTranslation,proto3" json:"short_name_translation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UnitId               string            `protobuf:"bytes,11,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
}

func (x *MeasurementUnit) Reset() {
	*x = MeasurementUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasurementUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementUnit) ProtoMessage() {}

func (x *MeasurementUnit) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementUnit.ProtoReflect.Descriptor instead.
func (*MeasurementUnit) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{2}
}

func (x *MeasurementUnit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MeasurementUnit) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *MeasurementUnit) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *MeasurementUnit) GetPrecision() *Precision {
	if x != nil {
		return x.Precision
	}
	return nil
}

func (x *MeasurementUnit) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MeasurementUnit) GetCreatedBy() *common.ShortUser {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *MeasurementUnit) GetIsDeletable() bool {
	if x != nil {
		return x.IsDeletable
	}
	return false
}

func (x *MeasurementUnit) GetLongNameTranslation() map[string]string {
	if x != nil {
		return x.LongNameTranslation
	}
	return nil
}

func (x *MeasurementUnit) GetShortNameTranslation() map[string]string {
	if x != nil {
		return x.ShortNameTranslation
	}
	return nil
}

func (x *MeasurementUnit) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

type ShortMeasurementUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortName            string            `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	LongName             string            `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	IsDeletable          bool              `protobuf:"varint,4,opt,name=is_deletable,json=isDeletable,proto3" json:"is_deletable,omitempty"`
	CreatedAt            string            `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Precision            *Precision        `protobuf:"bytes,6,opt,name=precision,proto3" json:"precision,omitempty"`
	CreatedBy            *common.ShortUser `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	LongNameTranslation  map[string]string `protobuf:"bytes,8,rep,name=long_name_translation,json=longNameTranslation,proto3" json:"long_name_translation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ShortNameTranslation map[string]string `protobuf:"bytes,9,rep,name=short_name_translation,json=shortNameTranslation,proto3" json:"short_name_translation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ShortMeasurementUnit) Reset() {
	*x = ShortMeasurementUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortMeasurementUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortMeasurementUnit) ProtoMessage() {}

func (x *ShortMeasurementUnit) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortMeasurementUnit.ProtoReflect.Descriptor instead.
func (*ShortMeasurementUnit) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{3}
}

func (x *ShortMeasurementUnit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShortMeasurementUnit) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *ShortMeasurementUnit) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *ShortMeasurementUnit) GetIsDeletable() bool {
	if x != nil {
		return x.IsDeletable
	}
	return false
}

func (x *ShortMeasurementUnit) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ShortMeasurementUnit) GetPrecision() *Precision {
	if x != nil {
		return x.Precision
	}
	return nil
}

func (x *ShortMeasurementUnit) GetCreatedBy() *common.ShortUser {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *ShortMeasurementUnit) GetLongNameTranslation() map[string]string {
	if x != nil {
		return x.LongNameTranslation
	}
	return nil
}

func (x *ShortMeasurementUnit) GetShortNameTranslation() map[string]string {
	if x != nil {
		return x.ShortNameTranslation
	}
	return nil
}

type GetAllMeasurementUnitsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   int32           `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page    int32           `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Search  string          `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	Request *common.Request `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *GetAllMeasurementUnitsRequest) Reset() {
	*x = GetAllMeasurementUnitsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMeasurementUnitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMeasurementUnitsRequest) ProtoMessage() {}

func (x *GetAllMeasurementUnitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMeasurementUnitsRequest.ProtoReflect.Descriptor instead.
func (*GetAllMeasurementUnitsRequest) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllMeasurementUnitsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllMeasurementUnitsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllMeasurementUnitsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetAllMeasurementUnitsRequest) GetRequest() *common.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetAllMeasurementUnitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*ShortMeasurementUnit `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Total int64                   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetAllMeasurementUnitsResponse) Reset() {
	*x = GetAllMeasurementUnitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllMeasurementUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllMeasurementUnitsResponse) ProtoMessage() {}

func (x *GetAllMeasurementUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllMeasurementUnitsResponse.ProtoReflect.Descriptor instead.
func (*GetAllMeasurementUnitsResponse) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllMeasurementUnitsResponse) GetData() []*ShortMeasurementUnit {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllMeasurementUnitsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortName            string            `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	ShortNameTranslation map[string]string `protobuf:"bytes,3,rep,name=short_name_translation,json=shortNameTranslation,proto3" json:"short_name_translation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LongName             string            `protobuf:"bytes,4,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	LongNameTranslation  map[string]string `protobuf:"bytes,5,rep,name=long_name_translation,json=longNameTranslation,proto3" json:"long_name_translation,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{6}
}

func (x *Unit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Unit) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Unit) GetShortNameTranslation() map[string]string {
	if x != nil {
		return x.ShortNameTranslation
	}
	return nil
}

func (x *Unit) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *Unit) GetLongNameTranslation() map[string]string {
	if x != nil {
		return x.LongNameTranslation
	}
	return nil
}

type Precision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Precision) Reset() {
	*x = Precision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Precision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Precision) ProtoMessage() {}

func (x *Precision) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Precision.ProtoReflect.Descriptor instead.
func (*Precision) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{7}
}

func (x *Precision) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Precision) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetAllDefaultUnitsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Units           []*Unit      `protobuf:"bytes,1,rep,name=units,proto3" json:"units,omitempty"`
	Precisions      []*Precision `protobuf:"bytes,2,rep,name=precisions,proto3" json:"precisions,omitempty"`
	TotalUnits      int32        `protobuf:"varint,3,opt,name=total_units,json=totalUnits,proto3" json:"total_units,omitempty"`
	TotalPrecisions int32        `protobuf:"varint,4,opt,name=total_precisions,json=totalPrecisions,proto3" json:"total_precisions,omitempty"`
}

func (x *GetAllDefaultUnitsResponse) Reset() {
	*x = GetAllDefaultUnitsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_measurement_unit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDefaultUnitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDefaultUnitsResponse) ProtoMessage() {}

func (x *GetAllDefaultUnitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_measurement_unit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDefaultUnitsResponse.ProtoReflect.Descriptor instead.
func (*GetAllDefaultUnitsResponse) Descriptor() ([]byte, []int) {
	return file_measurement_unit_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllDefaultUnitsResponse) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *GetAllDefaultUnitsResponse) GetPrecisions() []*Precision {
	if x != nil {
		return x.Precisions
	}
	return nil
}

func (x *GetAllDefaultUnitsResponse) GetTotalUnits() int32 {
	if x != nil {
		return x.TotalUnits
	}
	return 0
}

func (x *GetAllDefaultUnitsResponse) GetTotalPrecisions() int32 {
	if x != nil {
		return x.TotalPrecisions
	}
	return 0
}

var File_measurement_unit_proto protoreflect.FileDescriptor

var file_measurement_unit_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e,
	0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8e,
	0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xdf, 0x04, 0x0a, 0x0f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x6e, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x5d, 0x0a, 0x15, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x13, 0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x16, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x14, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64,
	0x1a, 0x46, 0x0a, 0x18, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x47, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xd5, 0x04, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x62, 0x0a,
	0x15, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x6e, 0x69, 0x74, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x6c, 0x6f,
	0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x65, 0x0a, 0x16, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x14, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x46, 0x0a, 0x18, 0x4c, 0x6f, 0x6e, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x47, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55,
	0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x61, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8e, 0x03, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x16,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x14, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x52, 0x0a, 0x15, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x13, 0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x19, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a,
	0x18, 0x4c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x31, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x74,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x1a, 0x5a, 0x18,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_measurement_unit_proto_rawDescOnce sync.Once
	file_measurement_unit_proto_rawDescData = file_measurement_unit_proto_rawDesc
)

func file_measurement_unit_proto_rawDescGZIP() []byte {
	file_measurement_unit_proto_rawDescOnce.Do(func() {
		file_measurement_unit_proto_rawDescData = protoimpl.X.CompressGZIP(file_measurement_unit_proto_rawDescData)
	})
	return file_measurement_unit_proto_rawDescData
}

var file_measurement_unit_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_measurement_unit_proto_goTypes = []interface{}{
	(*CreateMeasurementUnitRequest)(nil),   // 0: CreateMeasurementUnitRequest
	(*UpdateMeasurementUnitRequest)(nil),   // 1: UpdateMeasurementUnitRequest
	(*MeasurementUnit)(nil),                // 2: MeasurementUnit
	(*ShortMeasurementUnit)(nil),           // 3: ShortMeasurementUnit
	(*GetAllMeasurementUnitsRequest)(nil),  // 4: GetAllMeasurementUnitsRequest
	(*GetAllMeasurementUnitsResponse)(nil), // 5: GetAllMeasurementUnitsResponse
	(*Unit)(nil),                           // 6: Unit
	(*Precision)(nil),                      // 7: Precision
	(*GetAllDefaultUnitsResponse)(nil),     // 8: GetAllDefaultUnitsResponse
	nil,                                    // 9: MeasurementUnit.LongNameTranslationEntry
	nil,                                    // 10: MeasurementUnit.ShortNameTranslationEntry
	nil,                                    // 11: ShortMeasurementUnit.LongNameTranslationEntry
	nil,                                    // 12: ShortMeasurementUnit.ShortNameTranslationEntry
	nil,                                    // 13: Unit.ShortNameTranslationEntry
	nil,                                    // 14: Unit.LongNameTranslationEntry
	(*common.Request)(nil),                 // 15: Request
	(*common.ShortUser)(nil),               // 16: ShortUser
}
var file_measurement_unit_proto_depIdxs = []int32{
	15, // 0: CreateMeasurementUnitRequest.request:type_name -> Request
	15, // 1: UpdateMeasurementUnitRequest.request:type_name -> Request
	7,  // 2: MeasurementUnit.precision:type_name -> Precision
	16, // 3: MeasurementUnit.created_by:type_name -> ShortUser
	9,  // 4: MeasurementUnit.long_name_translation:type_name -> MeasurementUnit.LongNameTranslationEntry
	10, // 5: MeasurementUnit.short_name_translation:type_name -> MeasurementUnit.ShortNameTranslationEntry
	7,  // 6: ShortMeasurementUnit.precision:type_name -> Precision
	16, // 7: ShortMeasurementUnit.created_by:type_name -> ShortUser
	11, // 8: ShortMeasurementUnit.long_name_translation:type_name -> ShortMeasurementUnit.LongNameTranslationEntry
	12, // 9: ShortMeasurementUnit.short_name_translation:type_name -> ShortMeasurementUnit.ShortNameTranslationEntry
	15, // 10: GetAllMeasurementUnitsRequest.request:type_name -> Request
	3,  // 11: GetAllMeasurementUnitsResponse.data:type_name -> ShortMeasurementUnit
	13, // 12: Unit.short_name_translation:type_name -> Unit.ShortNameTranslationEntry
	14, // 13: Unit.long_name_translation:type_name -> Unit.LongNameTranslationEntry
	6,  // 14: GetAllDefaultUnitsResponse.units:type_name -> Unit
	7,  // 15: GetAllDefaultUnitsResponse.precisions:type_name -> Precision
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_measurement_unit_proto_init() }
func file_measurement_unit_proto_init() {
	if File_measurement_unit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_measurement_unit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMeasurementUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMeasurementUnitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasurementUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortMeasurementUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMeasurementUnitsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllMeasurementUnitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Precision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_measurement_unit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDefaultUnitsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_measurement_unit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_measurement_unit_proto_goTypes,
		DependencyIndexes: file_measurement_unit_proto_depIdxs,
		MessageInfos:      file_measurement_unit_proto_msgTypes,
	}.Build()
	File_measurement_unit_proto = out.File
	file_measurement_unit_proto_rawDesc = nil
	file_measurement_unit_proto_goTypes = nil
	file_measurement_unit_proto_depIdxs = nil
}
